<?xml version="1.0" encoding="UTF-8"?>
<!--
	- DispatcherServlet application context for PetClinic's web tier.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    
    <bean id="templateResolver" 
        class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="prefix" value="/WEB-INF/thymeleaf/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML5" />
<!--         <property name="order" value="2" /> -->
        <!-- Template cache is set to false (default is true).        -->
        <property name="cacheable" value="false" />
    </bean>

    <bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
          <property name="templateResolver" ref="templateResolver" />
          <!-- These lines configure the dialects to use with Thymeleaf -->
		  <property name="dialects">
		    <set>
		      <bean class="org.thymeleaf.spring3.dialect.SpringStandardDialect"/>
		      <bean class="nz.net.ultraq.thymeleaf.LayoutDialect"/>
		    </set>
		  </property>
		  <property name="additionalDialects">
	        <set>
	            <bean class="com.github.dandelion.datatables.thymeleaf.dialect.DataTablesDialect" />
	        </set>
	      </property>
    </bean>

	<!--
	- The ContentNegotiatingViewResolver delegates to the InternalResourceViewResolver and BeanNameViewResolver,
	- and uses the requested media type (determined by the path extension) to pick a matching view. 
	- When the media type is 'text/html', it will delegate to the InternalResourceViewResolver's JstlView, 
	- otherwise to the BeanNameViewResolver.
	-->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager" ref="cnManager"/>
		<property name="viewResolvers">
        	<list>            
			    <!-- Used here for 'xml' and 'atom' views  -->
			    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
                    <property name="order" value="1"/>
                </bean>
                
                <bean class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
                    <property name="templateEngine" ref="templateEngine" />
                    <property name="order" value="2"/>
<!--                     <property name="viewNames"  -->
<!--                               value="bodyHeader,footer,headTag,welcome,exception,vets/vetList,                                 -->
<!--                                owners/ownersList,owners/ownerDetails,owners/findOwners,   -->
<!--                                  owners/createOrUpdateOwnerForm,pets/createOrUpdatePetForm, -->
<!--                                  pets/createOrUpdateVisitForm"/>    -->
                </bean>
				 <!-- 
			        - [THYMELEAF] We replace the org.springframework.web.servlet.view.InternalResourceViewResolver 
			        - view resolver with thymeleaf view resolver 
			     -->        
                 <!-- Default viewClass: JSTL view (JSP with html output) -->
<!--                 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
<!--                     Example: a logical view name of 'vets' is mapped to '/WEB-INF/jsp/vets.jsp' --> 
<!--                     <property name="prefix" value="/WEB-INF/jsp/"/> -->
<!--                     <property name="suffix" value=".jsp"/> -->
<!--                     <property name="order" value="3"/> -->
<!--                 </bean> -->                
        	</list>
        </property>
	</bean>

	<!-- Simple strategy: only path extension is taken into account -->	
	<bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="true"/>		
		<property name="ignoreAcceptHeader" value="true"/>
		<property name="defaultContentType" value="text/html"/>
        
        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html" />
                <entry key="xml"  value="application/xml" />
                <entry key="atom" value="application/atom+xml" />
            </map>
        </property>
	</bean> 

</beans>
